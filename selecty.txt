**********************************1***************************************************
SELECT CONCAT(last_name, CONCAT(' ', salary)) AS wynagrodzenie
FROM employees
WHERE (department_id = '20' OR department_id  = '50') AND salary BETWEEN 2000 AND 7000
ORDER BY last_name ASC;
**********************************2****************************************************
SELECT hire_date, last_name, &colmn AS user_column
FROM employees
WHERE TO_CHAR(hire_date,'YYYY') = 2005 AND manager_id IS NOT NULL
ORDER BY user_column ASC;
**********************************3****************************************************
LECT CONCAT(last_name,CONCAT (' ',first_name)) AS name, salary, phone_number 
FROM employees
WHERE employees.last_name LIKE '__e%' AND employees.first_name LIKE '%&user%'
ORDER BY name DESC
*********************************4*****************************************************
SELECT first_name, last_name, ROUND(MONTHS_BETWEEN(TO_DATE('28-Oct-2021',  '%dd-%Mm-%Yyyy'),TO_DATE(hire_date, '%dd-%Mm-%yy')),-1) AS przepracowane_miesiace, salary,
  CASE 
    WHEN ROUND(MONTHS_BETWEEN(TO_DATE('28-Oct-2021',  '%dd-%Mm-%Yyyy'),TO_DATE(hire_date, '%dd-%Mm-%yy')),-1) <= 150
    THEN '10%' 
    WHEN ROUND(MONTHS_BETWEEN(TO_DATE('28-Oct-2021',  '%dd-%Mm-%Yyyy'),TO_DATE(hire_date, '%dd-%Mm-%yy')),-1) BETWEEN 150 AND 200
    THEN '20%'  
    ELSE '30%' 
  END AS dodatek
FROM employees
ORDER BY 3 asc;
********************************5******************************************************
SELECT ROUND(SUM(employees.salary),0) as suma,  ROUND(AVG(employees.salary),0) as srednia
FROM employees, departments
WHERE employees.department_id = departments.department_id
GROUP BY departments.department_name
HAVING min(salary)>5000
**********************************6*****************************************************
SELECT employees.last_name, departments.department_id, departments.department_name, jobs.job_id, locations.city 
FROM employees, departments, jobs, locations
WHERE employees.department_id = departments.department_id AND employees.job_id = jobs.job_id 
AND departments.location_id = locations.location_id AND locations.city = 'Toronto'
************************************7***************************************************
SELECT first_name, last_name, department_id
FROM employees
WHERE department_id IN  
(SELECT CONCAT(first_name,CONCAT(' ', last_name)) AS work_mates   
FROM employees)
AND first_name='Jennifer'
************************************8***************************************************
SELECT department_name
FROM departments 
WHERE
 NOT EXISTS (SELECT * FROM employees WHERE departments.department_id = employees.department_id)
*****************************************9**********************************************
CREATE TABLE job_grades AS select * FROM hr.job_grades
INSERT INTO job_grades SELECT * FROM hr.job_grades
*************************************10*************************************************
SELECT CONCAT(employees.first_name,CONCAT(' ', employees.last_name)) AS name, 
employees.job_id, departments.department_name, employees.salary, job_grades.grade
FROM employees 
JOIN departments  ON departments.department_id = employees.department_id
LEFT JOIN job_grades  ON employees.salary
BETWEEN job_grades.min_salary AND job_grades.max_salary WHERE grade IS NOT NULL
************************************11**************************************************
SELECT first_name, last_name, salary
FROM employees
WHERE salary > (SELECT AVG(salary) FROM employees)
ORDER BY salary DESC;
**************************************12************************************************
SELECT employee_id, CONCAT(first_name, CONCAT(' ', last_name))
FROM employees
WHERE department_id IN 
	(SELECT department_id FROM employees WHERE last_name like '%u%');
